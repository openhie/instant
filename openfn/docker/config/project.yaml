jobs:
  create-patient:
    expression: >
      post('Patient', {
        body: dataValue('$'),
        headers: {
          'Content-Type': 'application/json',
          Authorization: 'Custom test',
          'If-None-Exist': state =>
            `identifier=${dataValue('identifier[0].value')(state)}`,
        },
      });
    adaptor: '@openfn/language-http'
    trigger: patient-message
    credential: openhim

  create-organization:
    expression: >
      post('Organization', {
        body: dataValue('$'),
        headers: {
          'Content-Type': 'application/json',
          Authorization: 'Custom test',
          'If-None-Exist': state =>
            `identifier=${dataValue('identifier[0].value')(state)}`,
        },
      });
    adaptor: '@openfn/language-http'
    trigger: organization-message
    credential: openhim

  commcare-to-openhim:
    expression: >
      post("Patient", {
        body: fields(
          field("resourceType", "Patient"),
          field("id", dataValue("$form.patient_data.patient_id")),
          field("identifier", [
            {
              use: "usual",
              type: {
                coding: [
                  {
                    system: "http://terminology.hl7.org/CodeSystem/v2-0203",
                    code: "MR",
                  },
                ],
              },
              system: "urn:oid:0.1.2.3.4.5.6.7",
              value: dataValue("$form.patient_data.patient_id"),
            },
          ]),
          field("name", [
            {
              use: "official",
              family: dataValue("$form.patient_data.age.last_name"),
              given: [dataValue("$form.patient_data.age.first_name")],
            },
          ]),
          field("gender", dataValue("$form.patient_data.age.gender")),
          field("birthDate", dataValue("$form.patient_data.age.birthDate"))
        ),
        headers: {
          "Content-Type": "application/json",
          Authorization: "Custom test",
          "If-None-Exist": (state) =>
            `identifier=${dataValue("$form.patient_data.patient_id")(state)}`,
        },
      });

      post("Encounter", {
        body: fields(
          field("resourceType", "Encounter"),
          field("status", "finished"),
          field(
            "subject",
            field("reference", (state) => `Patient/${dataValue("id")(state)}`)
          )
        ),
        headers: {
          "Content-Type": "application/json",
          Authorization: "Custom test",
        },
      });
    adaptor: '@openfn/language-http'
    trigger: commcare-message
    credential: openhim

  kobo-to-openhim:
    expression: >
      post("Patient", {
        body: fields(
          field("resourceType", "Patient"),
          field("id", dataValue("$body.Godata_ID")),
          field("identifier", [
            {
              use: "usual",
              type: {
                coding: [
                  {
                    system: "http://terminology.hl7.org/CodeSystem/v2-0203",
                    code: "MR",
                  },
                ],
              },
              system: "urn:oid:0.1.2.3.4.5.6.7",
              value: dataValue("$body.Godata_ID"),
            },
          ]),
          field("name", [
            {
              use: "official",
              text: dataValue("$body.Patient_name"),
            },
          ]),
          field("gender", dataValue("$body.Sex")),
          field("birthDate", (state) => {
            const year =
              Intl.DateTimeFormat("en", { year: "numeric" }).format() -
              Number(dataValue("$body.Age_in_year")(state));
            return `${year}-01-01`;
          })
        ),
        headers: {
          "Content-Type": "application/json",
          Authorization: "Custom test",
          "If-None-Exist": (state) =>
            `identifier=${dataValue("$body.Godata_ID")(state)}`,
        },
      });

      post("Encounter", {
        body: fields(
          field("resourceType", "Encounter"),
          field("status", "finished"),
          field(
            "subject",
            field(
              "reference",
              (state) => `Patient/${dataValue("id")(state)}`
            )
          )
        ),
        headers: {
          "Content-Type": "application/json",
          Authorization: "Custom test",
        },
      });

    adaptor: '@openfn/language-http'
    trigger: kobo-message
    credential: openhim


triggers:
  patient-message:
    criteria: '{"resourceType":"Patient"}'
  organization-message:
    criteria: '{"resourceType":"Organization"}'
  kobo-message:
    criteria: '{"form":"covid19-registration"}'
  commcare-message:
    criteria: '{"app_id":"aa"}'

credentials:
  openhim:
    baseUrl: "http://openhim-core:5001/fhir/"